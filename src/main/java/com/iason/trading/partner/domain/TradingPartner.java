package com.iason.trading.partner.domain;

import com.fasterxml.jackson.annotation.JsonFormat;
import lombok.*;
import lombok.extern.slf4j.Slf4j;
import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.annotations.UpdateTimestamp;

import javax.persistence.*;
import javax.validation.constraints.Null;
import javax.websocket.server.ServerEndpoint;
import java.sql.Timestamp;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;

/**
 * Created by IntelliJ IDEA
 * User: Balaji Varadharajan
 * Class/Interface/Enum Name: TradingPartner
 * Inside the package - com.iason.trading.partner.domain
 * Created Date: 4/29/2020
 * Created Time: 4:34 PM
 **/
@Entity
@Slf4j
@Setter
@Getter
@AllArgsConstructor
@NoArgsConstructor
@Builder
public class TradingPartner {

    /**
     * Internal id generated by the DB. This
     * will not be exposed to outside users of the
     * APIs
     */
    @Id
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "tp_sequence")
    @SequenceGenerator(name="tp_sequence", sequenceName = "tp_sequence",
            initialValue = 10001, allocationSize = 1)
    @Column(updatable = false, nullable = false)
    private Long tradingPartnerId;

    /**
     * Unique Trading Partner id that is created by the user
     * This the id that is provided by the user.
     * This has to be unique
     */
    @Column(name="trading_partner", columnDefinition = "varchar",
            updatable = false, nullable = false, unique = true)
    private String tradingPartner;

    /**
     * The state that is associated with the Trading Partner
     */
    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "state_id", nullable = false)
    private State state;

    /**
     * The HIOS ID that is associated with the Trading Partner
     */
    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "hios_id", nullable = false)
    private HIOS hios;

    @CreationTimestamp
    @Column(updatable = false)
    private Timestamp createdDate;
    @UpdateTimestamp
    @Column(updatable = false)
    private Timestamp lastModifiedDate;
}
